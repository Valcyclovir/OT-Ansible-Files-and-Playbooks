# This will claim/re-claim the Netdata client on your servers.

# Settings to edit:
# CLAIM_TOKEN (Get this from the netdata website "-token=". Copy until the space before -rooms.)
# CLAIM_ROOMS (Get this from the netdata website "-rooms=". Copy until the space before -url.)
---

- name: Claim/reclaim a Netdata client
  hosts: all
  vars:
    claim_token: CLAIM_TOKEN
    claim_rooms: CLAIM_ROOMS
    claim_url: https://app.netdata.cloud
    reclaim: true
  gather_facts: no

  tasks:
  - name: Claim to Netdata Cloud
    block:

    - name: Checking if node is already claimed
      # This check is used to prevent errors in the following task to claim the node to Netdata Cloud.
      stat:
        path: /var/lib/netdata/cloud.d/claimed_id
      register: claimed_result

    - name: Claim to Netdata Cloud
      shell: netdata-claim.sh -token={{ claim_token }} -rooms={{ claim_rooms }} -url={{ claim_url }}
      when: claimed_result.stat.exists == false
      become: yes
    when: reclaim == false

  - name: Re-claim a node to Netdata Cloud
    block:
    - name: Install uuid-runtime
      apt:
        name: uuid-runtime
        state: present

    - name: Ensure `uuidgen` is installed
      stat:
        path: /usr/bin/uuidgen
      register: uuidgen_result

    - name: Fail if `uuidgen` is not installed
      fail:
        msg: The system needs `uuidgen` installed to enable re-claiming.
      when: uuidgen_result.stat.exists == false

    - name: Reclaim the node with `-id=`
      shell: netdata-claim.sh -token={{ claim_token }} -rooms={{ claim_rooms }} -url={{ claim_url }} -id=$(uuidgen)
      when: uuidgen_result.stat.exists == true
      notify: Restart Netdata
      become: yes
    when: reclaim == true

  handlers:
  - name: Restart Netdata
    service:
      name: netdata
      state: restarted
